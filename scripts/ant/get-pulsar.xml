<project name="pulsar-distribution" default="install-upgrade" basedir=".">

    <description>Install or upgrade Pulsar for development.</description>

    <dirname property="script.dir" file="${ant.file}"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${script.dir}/lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <target name="install-upgrade" depends="-download-from-repo, -unpack-devlib" description="Install or update Pulsar for development."/>

    <target name="-load-properties">
        <!-- Load configuration for the get-pulsar -->
        <loadproperties prefix="conf" srcfile="${script.dir}/get-pulsar.properties"/>

        <fail unless="conf.base.dir" message="Missing configuration for 'base.dir' in property file."/>
        <fail unless="conf.repositoryURL" message="Missing configuration for 'repositoryURL' in property file."/>
        <fail unless="conf.package" message="Missing configuration for 'package' in property file."/>
        <fail unless="conf.version" message="Missing configuration for 'verion' in property file."/>
        <fail unless="conf.pulsar.dir" message="Missing configuration for 'target.dir' in property file."/>
        <fail unless="conf.devlib.dir" message="Missing configuration for 'devlib.dir' in property file."/>

        <!-- "develop" = Developer version, "Version number" = Minified Production version -->
        <property name="repositoryURL" value="https://raw.githubusercontent.com/DSE-AB/artifacts/master/pulsar"/>
        <property name="version" value="develop"/>
        <!--<property name="version" value="1.0.3"/>-->
        <loadproperties prefix="dist">
            <url url="${repositoryURL}/spa-ui-${version}.properties"/>
        </loadproperties>

        <property name="launcher.path" value="${dist.launcher}"/>
        <property name="modules.path" value="${dist.modules}"/>
        <property name="apps.path" value="${dist.apps}"/>
        <property name="endorsed.path" value="${dist.endorsed}"/>
        <property name="javadoc.path" value="${dist.javadoc}"/>
        <property name="docs.path" value="${dist.docs}"/>

        <property name="spaui.path" value="${dist.spaui}"/>
        <property name="spaui-endorsed.path" value="${dist.spaui-endorsed}"/>

        <property name="devproject.dir" location="${conf.base.dir}"/>
        <property name="dest.dir" location="${devproject.dir}/${conf.pulsar.dir}"/>
        <property name="lib-devel.dir" location="${devproject.dir}/${conf.devlib.dir}"/>

        <basename property="launcher.file" file="${launcher.path}"/>
        <basename property="modules.file" file="${modules.path}"/>
        <basename property="apps.file" file="${apps.path}"/>
        <basename property="endorsed.file" file="${endorsed.path}"/>
        <basename property="javadoc.file" file="${javadoc.path}"/>
        <basename property="docs.file" file="${docs.path}"/>

        <basename property="spaui.file" file="${spaui.path}"/>
        <basename property="spaui-endorsed.file" file="${spaui-endorsed.path}"/>

    </target>

    <target name="-download-from-repo" depends="-load-properties">

        <mkdir dir="${dest.dir}"/>

        <if>
            <available file="${dest.dir}/${launcher.file}"/>
            <else>
                <delete>
                    <fileset dir="${dest.dir}" includes="pulsar.launcher-*.jar"/>
                </delete>
                <get src="${repositoryURL}/${launcher.path}" dest="${dest.dir}"/>
            </else>
        </if>

        <if>
            <available file="${dest.dir}/${modules.file}"/>
            <else>
                <delete>
                    <fileset dir="${dest.dir}/" includes="pulsar-modules-*.pulsar"/>
                </delete>
                <get src="${repositoryURL}/${modules.path}" dest="${dest.dir}"/>
            </else>
        </if>

        <if>
            <available file="${dest.dir}/${apps.file}"/>
            <else>
                <delete>
                    <fileset dir="${dest.dir}/" includes="pulsar-apps-*.pulsar"/>
                </delete>
                <get src="${repositoryURL}/${apps.path}" dest="${dest.dir}"/>
            </else>
        </if>

        <if>
            <available file="${dest.dir}/${endorsed.file}"/>
            <else>
                <delete>
                    <fileset dir="${dest.dir}/" includes="pulsar-endorsed-*.pulsar"/>
                </delete>
                <get src="${repositoryURL}/${endorsed.path}" dest="${dest.dir}"/>
            </else>
        </if>

        <if>
            <available file="${dest.dir}/${spaui.file}"/>
            <else>
                <delete>
                    <fileset dir="." includes="spa-ui-*.pulsar"/>
                </delete>
                <get src="${repositoryURL}/${spaui.path}" dest="${dest.dir}"/>
            </else>
        </if>

        <if>
            <available file="${dest.dir}/${spaui-endorsed.file}"/>
            <else>
                <delete>
                    <fileset dir="." includes="spa-ui-endorsed*.pulsar"/>
                </delete>
                <get src="${repositoryURL}/${spaui-endorsed.path}" dest="${dest.dir}"/>
            </else>
        </if>

        <if>
            <available file="${dest.dir}/${docs.file}"/>
            <else>
                <mkdir dir="${dest.dir}/docs"/>
                <delete>
                    <fileset dir="${dest.dir}/docs" includes="Pulsar * Documentation - *.pdf"/>
                </delete>
                <propertyregex property="docs_url" input="${docs.path}" regexp=" " replace="%20" global="true"/>
                <get src="${repositoryURL}/${docs_url}" dest="${dest.dir}/docs/${docs.file}"/>
            </else>
        </if>

    </target>

    <target name="-unpack-devlib" depends="-load-properties">

        <delete dir="${lib-devel.dir}/compile"/>
        <delete dir="${lib-devel.dir}/dist"/>

        <!-- Unpack Pulsar module resources, needed for compile, dist and config-->
        <unzip src="${dest.dir}/${modules.file}" dest="${lib-devel.dir}/compile">
            <patternset>
                <include name="*.jar"/>
                <exclude name="derby-*.jar"/>
                <exclude name="ojdbc-*.jar"/>
            </patternset>
        </unzip>

        <unzip src="${dest.dir}/${modules.file}" dest="${lib-devel.dir}/dist">
            <patternset>
                <include name="**/pulsar.core-*.jar"/>
                <include name="**/pulsar.packager-*.jar"/>
            </patternset>
            <flattenmapper/>
        </unzip>

        <!-- Unpack resources from Pulsar launcher, needed for compile, dist and config-->
        <unzip src="${dest.dir}/${launcher.file}" dest="${lib-devel.dir}/compile">
            <patternset>
                <include name="**/slf4j-api-*.jar"/>
                <include name="**/javax.inject-*.jar"/>
            </patternset>
            <flattenmapper/>
        </unzip>
        <unzip src="${dest.dir}/${launcher.file}" dest="${lib-devel.dir}/dist">
            <patternset>
                <include name="**/log4j-*.jar"/>
                <include name="**/logback-*.jar"/>
            </patternset>
            <flattenmapper/>
        </unzip>
        <unzip src="${dest.dir}/${launcher.file}" dest="${dest.dir}/conf" overwrite="false">
            <patternset>
                <include name="**/logback.xml"/>
            </patternset>
            <flattenmapper/>
        </unzip>
        <!-- Include the Pulsar Launcher itself as a compile resource -->
        <copy file="${dest.dir}/${launcher.file}" todir="${lib-devel.dir}/compile"/>

        <!-- Unpack endorsed resources needed for compilation -->
        <unzip src="${dest.dir}/${endorsed.file}" dest="${lib-devel.dir}/compile">
            <patternset>
                <include name="**/servlet-api-*.jar"/>
                <include name="**/geronimo-javamail_1.4_spec-*.jar"/>
                <include name="**/org.apache.servicemix.specs.jsr339-api*.jar"/>
                <include name="**/cxf-rt-frontend-jaxrs-*.jar"/>
                <include name="**/cxf-rt-frontend-simple-*.jar"/>
                <include name="**/cxf-rt-transports-http-*.jar"/>
                <include name="**/cxf-api-*.jar"/>
                <include name="**/pax-web-runtime-3.*.jar"/>
            </patternset>
            <flattenmapper/>
        </unzip>

        <!-- Unpack spu-ui resources needed for compilation -->
        <unzip src="${dest.dir}/${spaui.file}" dest="${lib-devel.dir}/compile">
            <patternset>
                <include name="**/pulsar.spaui.*.jar"/>
            </patternset>
            <flattenmapper/>
        </unzip>

        <!-- Unpack exported jars from inside the compile modules -->
        <unzip dest="${lib-devel.dir}/compile">
            <fileset dir="${lib-devel.dir}/compile">
                <include name="*.jar"/>
            </fileset>
            <patternset>
                <include name="PULSAR-INF/lib-exported/*.jar"/>
            </patternset>
            <flattenmapper/>
        </unzip>

        <!-- Unpack javadoc for each module -->
        <delete dir="${lib-devel.dir}/docs"/>
        <mkdir dir="${lib-devel.dir}/docs"/>
        <unzip dest="${lib-devel.dir}/docs">
            <fileset dir="${lib-devel.dir}/compile" includes="*.jar"/>
            <patternset>
                <include name="PULSAR-INF/docs/api/**"/>
            </patternset>
            <mapper>
                <globmapper from="PULSAR-INF/docs/api/*" to="*"/>
            </mapper>
        </unzip>

        <!-- Download javadoc main index files -->
        <get src="${repositoryURL}/${javadoc.path}" dest="${lib-devel.dir}/docs/${javadoc.file}"/>
        <unzip src="${lib-devel.dir}/docs/${javadoc.file}"
               dest="${lib-devel.dir}/docs"/>
        <delete file="${lib-devel.dir}/docs/${javadoc.file}"/>

        <antcall target="-create-local-devlink"/>
        <antcall target="-relink-launcher"/>
    </target>

    <target name="-create-local-devlink">
        <property name="dist.repo.file" location="${devproject.dir}/dist/repository.xml"/>
        <echo file="${dest.dir}/local-dev-link.pulsarlink" message="${dist.repo.file}"/>
    </target>

    <target name="-relink-launcher" depends="-load-properties">
        <java jar="${launcher.file}" args="--relink" fork="true"/>
    </target>

</project>
